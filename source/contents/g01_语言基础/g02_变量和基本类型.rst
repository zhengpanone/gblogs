===========================
2、Golang变量和基本类型
===========================

查看文档
=================

.. code-block:: shell

    go doc builtin.delete

变量和基本类型
===========================

第一个go程序
>>>>>>>>>>>>>>>>>>>>>>>>>

.. literalinclude:: ./code/g02/第一个go程序.go
    :encoding: utf-8
    :language: go
    :linenos:

内存是一个连续的数据集合,每一个内存存储区域都有唯一的地址标识成为内存地址。内存地址编号是一个无符号十六进制整型数据表示的

自动推导类型
>>>>>>>>>>>>>>>>>>>>>>>>>

.. literalinclude:: ./code/g02/02变量定义和使用.go
    :encoding: utf-8
    :language: go
    :linenos:

在go语言中,不同数据类型不能进行计算,可以通过类型转换进行解决

多重赋值
>>>>>>>>>>>>>>>>>>>>>>>>>

.. literalinclude:: ./code/g02/03.多重赋值.go
    :encoding: utf-8
    :language: go
    :linenos:

数字字面量语法（Number literals syntax）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Go1.13版本之后引入了数字字面量语法，这样便于开发者以二进制、八进制或十六进制浮点数的格式定义数字，例如：

v := 0b00101101， 代表二进制的 101101，相当于十进制的 45。 v := 0o377，代表八进制的 377，相当于十进制的 255。 v := 0x1p-2，代表十六进制的 1 除以 2²，也就是 0.25。 而且还允许我们用 _ 来分隔数字，比如说：

v := 123_456 等于 123456。

我们可以借助fmt函数来将一个整数以不同进制形式展示。

.. literalinclude:: ./code/g02/数字字面量语法.go
    :encoding: utf-8
    :language: go
    :linenos:

格式输出
>>>>>>>>>>>>>>>>>>>>

格式化输入输出数据

.. csv-table:: 
   :widths: 50,60
   :file: code/g02/数据类型.csv
   :encoding: utf-8
   :align: left

格式输入
>>>>>>>>>>>>>>>>>>>>>>>

.. literalinclude:: ./code/g02/05.格式输入.go
    :encoding: utf-8
    :language: go
    :linenos:


基本数据类型
==========================

字符串
>>>>>>>>>>>>>>

使用双引号包裹

多行字符串

.. code-block:: go

    s1 := `
        hello
        world
        `

字符
>>>>>>>>>>>>>>>>>

使用单引号包裹

Go 语言的字符有以下两种：

uint8类型，或者叫 byte 型，代表了ASCII码的一个字符。
rune类型，代表一个 UTF-8字符。
当需要处理中文、日文或者其他复合字符时，则需要用到rune类型。rune类型实际是一个int32

字符串修改

.. code-block:: go

    s1 :=  "白萝卜"
    s2 :=[]rune(s1) //把字符串强制转换成一个rune切片
    s2[0] = '红'
    fmt.Println(string(s2)) //把rune切片强制转换成字符串


运算符和流程控制
=========================

